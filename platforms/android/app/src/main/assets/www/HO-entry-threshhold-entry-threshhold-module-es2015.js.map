{"version":3,"sources":["./src/app/HO/entry-threshhold/entry-threshhold.page.html","./src/app/HO/entry-threshhold/entry-threshhold-routing.module.ts","./src/app/HO/entry-threshhold/entry-threshhold.module.ts","./src/app/HO/entry-threshhold/entry-threshhold.page.scss","./src/app/HO/entry-threshhold/entry-threshhold.page.ts"],"names":[],"mappings":"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","file":"HO-entry-threshhold-entry-threshhold-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <header>\\r\\n    <div class=\\\"header\\\">\\r\\n      <div class=\\\"logo_div\\\" routerLink=\\\"/admin-home\\\">\\r\\n        <img src=\\\"../../assets/images/logo.png\\\" />\\r\\n      </div>\\r\\n      <h1 class=\\\"text_white text_center title\\\">Entry Thresh Hold</h1>\\r\\n      <span class=\\\"logout_div\\\">\\r\\n        <div class=\\\"toggle_div\\\">\\r\\n          <button (click)=\\\"openFirst()\\\">\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n  </header>\\r\\n  <ion-row class=\\\"align_center search_parent\\\">\\r\\n    <ion-col size=\\\"2\\\">\\r\\n      <ion-back-button defaultHref=\\\"admin-home\\\"></ion-back-button>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"2\\\" offset=\\\"6\\\">\\r\\n      <ion-button size=\\\"small\\\" color=\\\"light\\\" (click)=\\\"searchCollapse()\\\">\\r\\n        <ion-icon name=\\\"search\\\" class=\\\"font22\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"2\\\">\\r\\n      <ion-button size=\\\"small\\\" color=\\\"light\\\" (click)=\\\"goToAddEntryThreshold()\\\">\\r\\n        <ion-icon name=\\\"add\\\" class=\\\"font22\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"searchbar_container\\\" *ngIf=\\\"searchShow\\\">\\r\\n      <ion-searchbar type=\\\"text\\\" showCancelButton=\\\"always\\\" (ionCancel)=\\\"hideSearchBar()\\\" (ionInput)=\\\"getItems($event)\\\">\\r\\n      </ion-searchbar>\\r\\n      <ion-row *ngIf=\\\"isItemAvailable\\\">\\r\\n        <ion-col>\\r\\n          <div class=\\\"my_table_container\\\">\\r\\n            <table class=\\\"my_table\\\">\\r\\n              <tbody>\\r\\n                <tr (click)=\\\"goToUpdateEntryThreshold(item)\\\" *ngFor=\\\"let item of items; let i = index\\\">\\r\\n                  <td>{{i+1}}</td>\\r\\n                  <td>{{item.MeterType}}</td>\\r\\n                  <td>{{item.ThresholdValue}}</td>\\r\\n                  <td>{{item.DaysForAverage}}</td>\\r\\n                  <td>{{item.status}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <ion-segment class=\\\"status_bar\\\" value=\\\"All\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\r\\n          <ion-segment-button value=\\\"Active\\\">\\r\\n            <ion-label>Active</ion-label>\\r\\n          </ion-segment-button>\\r\\n          <ion-segment-button value=\\\"All\\\">\\r\\n            <ion-label>All</ion-label>\\r\\n          </ion-segment-button>\\r\\n          <ion-segment-button value=\\\"InActive\\\">\\r\\n            <ion-label>InActive</ion-label>\\r\\n          </ion-segment-button>\\r\\n        </ion-segment>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"my_table_container\\\">\\r\\n          <table class=\\\"my_table\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sr No.</th>\\r\\n                <th>Meter Type</th>\\r\\n                <th>Thresh Hold Value (in %)</th>\\r\\n                <th>Average Days (in days)</th>\\r\\n                <th>Status</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let psmitem of listEntryThreshold;let i = index\\\" (click)=\\\"goToUpdateEntryThreshold(psmitem)\\\">\\r\\n                <td>{{i+1}}</td>\\r\\n                <td>{{psmitem.MeterType}}</td>\\r\\n                <td>{{psmitem.ThresholdValue}}</td>\\r\\n                <td>{{psmitem.DaysForAverage}}</td>\\r\\n                <td>{{psmitem.status}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EntryThreshholdPage } from './entry-threshhold.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntryThreshholdPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EntryThreshholdPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EntryThreshholdPageRoutingModule } from './entry-threshhold-routing.module';\r\n\r\nimport { EntryThreshholdPage } from './entry-threshhold.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EntryThreshholdPageRoutingModule\r\n  ],\r\n  declarations: [EntryThreshholdPage]\r\n})\r\nexport class EntryThreshholdPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0hPL2VudHJ5LXRocmVzaGhvbGQvZW50cnktdGhyZXNoaG9sZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuController, AlertController } from '@ionic/angular';\r\nimport { ApiService } from '../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-entry-threshhold',\r\n  templateUrl: './entry-threshhold.page.html',\r\n  styleUrls: ['./entry-threshhold.page.scss'],\r\n})\r\nexport class EntryThreshholdPage implements OnInit {\r\n  searchShow: boolean = false;\r\n  searchFlag: number = 0;\r\n  isShown: boolean = false;\r\n\r\n  isItemAvailable = false;\r\n  items: any;\r\n  listEntryThreshold: any = [];\r\n  StatusIsfalse: boolean = false;\r\n  entryThresholdStatus = '';\r\n  constructor(private router: Router, public commonServices: ApiService,\r\n    private menu: MenuController, public alertController: AlertController) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.getEntryThresholdList();\r\n  }\r\n\r\n  openFirst() {\r\n    this.menu.enable(true, 'menuCO');\r\n    this.menu.open('menuCO')\r\n  }\r\n\r\n  segmentChanged(value) {\r\n    console.log(value);\r\n    if (value.detail.value == 'Active') {\r\n      this.entryThresholdStatus = '0';\r\n    }\r\n    else if (value.detail.value == 'All') {\r\n      this.entryThresholdStatus = '';\r\n    }\r\n    else if (value.detail.value == 'InActive') {\r\n      this.entryThresholdStatus = '1';\r\n    }\r\n    this.getEntryThresholdList();\r\n  }\r\n  \r\n  ionViewWillEnter() {\r\n    this.getEntryThresholdList();\r\n  }\r\n\r\n  getEntryThresholdList() {\r\n    var self = this;\r\n    self.commonServices.loadingPresent();\r\n    self.commonServices.post(\"getEntryThreshold\", { status: self.entryThresholdStatus })\r\n      .subscribe((res: any) => {\r\n        var paymentRes = JSON.parse(res);\r\n\r\n        if (paymentRes.Table.length > 0) {\r\n          self.listEntryThreshold = paymentRes.Table;\r\n        }\r\n        console.log(self.listEntryThreshold);\r\n        self.commonServices.loadingDismiss();\r\n      },\r\n        (error) => {\r\n          self.commonServices.presentToast('Something went wrong.');\r\n          self.commonServices.loadingDismiss();\r\n        })\r\n  }\r\n\r\n  getItems(ev: any) {\r\n    // Reset items back to all of the items\r\n    // this.getEntryThresholdList();\r\n\r\n    // set val to the value of the searchbar\r\n    const val = ev.target.value;\r\n    this.items = this.listEntryThreshold;\r\n    // if the value is an empty string don't filter the items\r\n    if (val && val.trim() != '') {\r\n      this.isItemAvailable = true;\r\n      this.items = this.listEntryThreshold.filter((item) => {\r\n        return (item.MeterType.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n      })\r\n      console.log(this.items);\r\n    }\r\n  }\r\n\r\n  goToAddEntryThreshold() {\r\n    this.router.navigate(['add-update-entry-threshhold', { pageFlag: \"addds\" }]);\r\n  }\r\n\r\n  goToUpdateEntryThreshold(item) {\r\n    this.router.navigate(['add-update-entry-threshhold', { threshholdbj: JSON.stringify(item), pageFlag: \"updateds\" }]);\r\n  }\r\n\r\n  searchCollapse() {\r\n    if (this.searchFlag == 0) {\r\n      this.searchShow = true;\r\n      this.searchFlag = 1;\r\n    }\r\n    else {\r\n      this.searchShow = false;\r\n      this.searchFlag = 0;\r\n    }\r\n  }\r\n  hideSearchBar() {\r\n    this.searchShow = false;\r\n    this.searchFlag = 0;\r\n  }\r\n}"],"sourceRoot":""}